# Please adapt me
ROOTCA_SUBJECT="CN=CDRM Root CA1,O=myorg,C=CN"
SERVER_CA_SUBJECT="CN=CDRM Server CA1,O=myorg,C=CN"
CLIENT_CA_SUBJECT="CN=CDRM Client CA1,O=myorg,C=CN"

# Please adapt me
ROOTCA_P11_LABEL = rootca1
SERVER_CA_P11_LABEL = server-ca1
CLIENT_CA_P11_LABEL = client-ca1

KEYCERTS_DIR = xipki/ca-setup/keycerts

echo "#################################################################"
echo "#  RootCA:           Load rootca-conf.json                      #"
echo "#################################################################"

P11_LABEL = ${ROOTCA_P11_LABEL}

# Generate key and CSR

xi:sm2-p11 --slot 0 --label ${P11_LABEL}

xi:csr-p11 --hash SM3 --gm --slot 0 --label ${P11_LABEL} \
  --out ${KEYCERTS_DIR}/rootca1.csr --subject "${ROOTCA_SUBJECT}"

ca:refresh-token --type pkcs11

# Configure RootCA

xi:copy-file -f xipki/ca-setup/cacert-none/template.rootca-conf.json \
  xipki/ca-setup/cacert-none/rootca-conf.json

xi:replace --old "REPLACEME-TOKEN_TYPE" --new "pkcs11" \
  xipki/ca-setup/cacert-none/rootca-conf.json

xi:replace --old "REPLACEME-CA_SIGNERCONF" \
  --new "algo=SM3withSM2,slot=0,key-label=${P11_LABEL}" \
  xipki/ca-setup/cacert-none/rootca-conf.json

ca:load-conf --conf-file xipki/ca-setup/cacert-none/rootca-conf.json \
  --out-dir ${KEYCERTS_DIR}

ca:profile-rm --force rootca

xi:move-file ${KEYCERTS_DIR}/ca-rootca1.crt ${KEYCERTS_DIR}/rootca1.der

echo "# Update the certificate in the device"
xi:update-cert-p11 --slot 0 --label ${P11_LABEL} --cert ${KEYCERTS_DIR}/rootca1.der

ca:refresh-token --type pkcs11

echo "#################################################################"
echo "#  Server CA:         Load server-ca-conf.json                  #"
echo "#################################################################"

# Wait 2 seconds to get different startDate
sleep 2

P11_LABEL = ${SERVER_CA_P11_LABEL}

## Generate keys and CSR
xi:sm2-p11 --slot 0 --label ${P11_LABEL}

xi:csr-p11 --hash SM3 --gm --slot 0 --label ${P11_LABEL} \
  --out ${KEYCERTS_DIR}/server-ca1.csr --subject "${SERVER_CA_SUBJECT}"

ca:enroll-cert --ca rootca1 --csr ${KEYCERTS_DIR}/server-ca1.csr \
  --out ${KEYCERTS_DIR}/server-ca1.der --profile server-subca

xi:update-cert-p11 --slot 0 --label ${P11_LABEL}  \
    --cert ${KEYCERTS_DIR}/server-ca1.der \

ca:refresh-token --type pkcs11

# Configure CA

xi:copy-file -f xipki/ca-setup/cacert-present/template.server-ca-conf.json \
  xipki/ca-setup/cacert-present/server-ca-conf.json

xi:replace --old "REPLACEME-TOKEN_TYPE" --new "pkcs11" \
  xipki/ca-setup/cacert-present/server-ca-conf.json

xi:replace --old "REPLACEME-CA_SIGNERCONF" \
  --new "algo=SM3withSM2,slot=0,key-label=${P11_LABEL}" \
  xipki/ca-setup/cacert-present/server-ca-conf.json

ca:load-conf --conf-file xipki/ca-setup/cacert-present/server-ca-conf.json \
  --out-dir ${KEYCERTS_DIR}

echo "#################################################################"
echo "#  Client CA:         Load client-ca-conf.json                  #"
echo "#################################################################"

# Wait 2 seconds to get different startDate
sleep 2

P11_LABEL = ${CLIENT_CA_P11_LABEL}

## Generate keys and CSR
xi:sm2-p11 --slot 0 --label ${P11_LABEL}

xi:csr-p11 --hash SM3 --gm --slot 0 --label ${P11_LABEL} \
  --out ${KEYCERTS_DIR}/client-ca1.csr --subject "${CLIENT_CA_SUBJECT}"

ca:enroll-cert --ca rootca1 --csr ${KEYCERTS_DIR}/client-ca1.csr \
  --out ${KEYCERTS_DIR}/client-ca1.der --profile client-subca

xi:update-cert-p11 --slot 0 --label ${P11_LABEL}  \
    --cert ${KEYCERTS_DIR}/client-ca1.der \

ca:refresh-token --type pkcs11

# Configure CA

xi:copy-file -f xipki/ca-setup/cacert-present/template.client-ca-conf.json \
  xipki/ca-setup/cacert-present/client-ca-conf.json

xi:replace --old "REPLACEME-TOKEN_TYPE" --new "pkcs11" \
  xipki/ca-setup/cacert-present/client-ca-conf.json

xi:replace --old "REPLACEME-CA_SIGNERCONF" \
  --new "algo=SM3withSM2,slot=0,key-label=${P11_LABEL}" \
  xipki/ca-setup/cacert-present/client-ca-conf.json

ca:load-conf --conf-file xipki/ca-setup/cacert-present/client-ca-conf.json \
  --out-dir ${KEYCERTS_DIR}
